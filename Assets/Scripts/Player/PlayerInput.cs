//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""FirstPersonMovement"",
            ""id"": ""1900a257-25b3-43f7-b6b7-f98d19057ccb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""42258f20-4eda-4bc8-93c0-23f2f19bbd9e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""394d015e-86d1-4f82-b0d1-a0fce3ce94ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""785e34a4-8add-4aee-a0fb-d0ad803419bb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""580d3cb5-c8d5-4766-84a7-fd1ee15c9376"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e2350397-f914-41d5-afcb-34a500847832"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1696009-03b3-41ad-81ec-e97d249ee0a3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""68af5333-2367-4627-8940-1bcfee2855cd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1e3904b1-2fb3-4c4a-bf54-050018fe1965"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c56cc756-5652-44c8-9bca-06605eb2f80a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""374b57f0-4c9a-4fd2-be0e-c50870ea69c6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ff4f0b75-5391-49d6-923b-6a4c0a8cc165"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3914fc6f-3ad0-4d5d-bb2c-e609beb82dee"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FirstPersonMovement
        m_FirstPersonMovement = asset.FindActionMap("FirstPersonMovement", throwIfNotFound: true);
        m_FirstPersonMovement_Movement = m_FirstPersonMovement.FindAction("Movement", throwIfNotFound: true);
        m_FirstPersonMovement_Jump = m_FirstPersonMovement.FindAction("Jump", throwIfNotFound: true);
        m_FirstPersonMovement_Look = m_FirstPersonMovement.FindAction("Look", throwIfNotFound: true);
        m_FirstPersonMovement_Shoot = m_FirstPersonMovement.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FirstPersonMovement
    private readonly InputActionMap m_FirstPersonMovement;
    private IFirstPersonMovementActions m_FirstPersonMovementActionsCallbackInterface;
    private readonly InputAction m_FirstPersonMovement_Movement;
    private readonly InputAction m_FirstPersonMovement_Jump;
    private readonly InputAction m_FirstPersonMovement_Look;
    private readonly InputAction m_FirstPersonMovement_Shoot;
    public struct FirstPersonMovementActions
    {
        private @PlayerInput m_Wrapper;
        public FirstPersonMovementActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_FirstPersonMovement_Movement;
        public InputAction @Jump => m_Wrapper.m_FirstPersonMovement_Jump;
        public InputAction @Look => m_Wrapper.m_FirstPersonMovement_Look;
        public InputAction @Shoot => m_Wrapper.m_FirstPersonMovement_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_FirstPersonMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirstPersonMovementActions set) { return set.Get(); }
        public void SetCallbacks(IFirstPersonMovementActions instance)
        {
            if (m_Wrapper.m_FirstPersonMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnJump;
                @Look.started -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnLook;
                @Shoot.started -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_FirstPersonMovementActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_FirstPersonMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public FirstPersonMovementActions @FirstPersonMovement => new FirstPersonMovementActions(this);
    public interface IFirstPersonMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
